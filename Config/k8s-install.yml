- hosts: k8s
  become: yes
  vars:
    ansible_host_key_checking: false
 
  tasks:
   - name: change hostname
     shell: hostnamectl set-hostname {{ansible_host}}     

   - name: containerd Installation
     apt:
       name: containerd
       state: latest
       update_cache: true

   - name: Docker Installation
     apt:
       name: docker.io
       state: latest
       update_cache: true
   
   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present

   - name: add Kubernetes apt-key for APT repository
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add Kubernetes APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

   - name: install kubelet
     apt:
       name: kubelet
       state: present
       update_cache: true

   - name: install kubeadm
     apt:
       name: kubeadm
       state: present

   - name: start docker
     service:
       name: docker
       state: started
       enabled: yes
       masked: no

- hosts: k8s-master
  become: yes
  tasks:
   - name: install kubectl
     apt:
       name: kubectl
       #=1.14.0-00
       state: present
       force: yes
   
   - name: restart docker
     service:
       name: docker
       state: started
       enabled: yes
       masked: no

   - name: copy k8s config file aws.yml to master
     copy:
       src: /home/carmit/Git-Repositories/Project/Config/aws.yml
       dest: /home/ubuntu/aws.yml
       owner: ubuntu
       group: ubuntu
      
   - name: Start the cluster
      #become_user: ubuntu
     #shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --cloud-provider=aws  >> cluster.txt 
     shell: kubeadm init --config=/home/ubuntu/aws.yml --ignore-preflight-errors=NumCPU >> cluster.txt 
     args:
       chdir: $HOME
       creates: cluster.txt

   - name: create .kube directory
     become_user: ubuntu
     file:
       path: $HOME/.kube
       state: directory
       mode: 0755

   - name: copy admin.conf to user's kube config
     copy:
       src: /etc/kubernetes/admin.conf
       dest: /home/ubuntu/.kube/config
       remote_src: yes
       owner: ubuntu
       group: ubuntu
       mode: 0644

   - name: fetch admin.conf file to local machine
     fetch:
       src: /etc/kubernetes/admin.conf
       dest: /home/carmit/kubeconfig

   - name: install Pod network
     #become: yes
     become_user: ubuntu
     shell: sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml >> pod_setup.txt
     args:
       chdir: $HOME
       creates: pod_setup.txt

   - name: restart docker
     service:
       name: docker
       state: started
       enabled: yes
       masked: no

   - name: get join command
     become_user: ubuntu
     shell: kubeadm token create --print-join-command > join_command.txt
     register: join_command_raw
     args:
      chdir: $HOME
      creates: join_command.txt

   - name: copy join command
     #set_fact:
       #join_command: "{{ join_command_raw.stdout }}"
     fetch:
       src: /home/ubuntu/join_command.txt
       dest: /home/carmit/Git-Repositories/Project/Config/join_command
   #- debug:
    #   var: join_command
       #global: true
    
- hosts: k8s-workers
  become: yes
  vars:
    join_command: "{{ lookup('file', '/home/carmit/Git-Repositories/Project/Config/join_command/master/home/ubuntu/join_command.txt') }}"
  tasks:
   - name: set join config file
     template:
       src: /home/carmit/Git-Repositories/Project/Config/k8s-join-node.j2
       dest: /home/ubuntu/k8s-join-node.yml
       owner: ubuntu

   - name: join cluster
     shell: kubeadm join --config /home/ubuntu/k8s-join-node.yml > node_joined.txt
#   shell: "{{ hostvars['master'].join_command }} >> node_joined.txt"
     args:
       chdir: $HOME
       creates: node_joined.txt