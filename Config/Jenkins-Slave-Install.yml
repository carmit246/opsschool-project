- hosts: jenkins-slaves
  become: yes

  tasks:
  - name: install java
    apt:
      name: default-jre
      state: present
      update_cache: true

 # - name: Download Jenkins Swarm Client
  #  get_url: 
   #   dest: /home/ubuntu/swarm-client-1.8-jar-with-dependencies.jar 
    #  url: http://maven.jenkins-ci.org/content/repositories/releases/org/jenkins-ci/plugins/swarm-client/1.8/swarm-client-1.8-jar-with-dependencies.jar 
     # owner: ubuntu
  - name: Create .kube directory
    file:
      path: /home/ubuntu/.kube
      state: directory

  - name: Copy k8s admin.conf file
    copy:
      src: /home/carmit/kubeconfig/master/etc/kubernetes/admin.conf
      dest: /home/ubuntu/.kube/config
      owner: ubuntu
      group: ubuntu

  - name: containerd Installation
    apt:
      name: containerd
      state: latest
      update_cache: true

  - name: Docker Installation
    apt:
      name: docker.io
      state: latest
      update_cache: true

  - name: start docker
    service:
      name: docker
      state: started
      enabled: yes
      masked: no
  
  - name: add to docker group
    user:
      name: ubuntu
      groups: docker
      append: yes

  #sudo chmod 666 /var/run/docker.sock
  
  - name: Give insecure permissions to an existing file
    file:
      path: /var/run/docker.sock
      #owner: root
      #group: root
      mode: '666'

  - name: add Kubernetes apt-key for APT repository
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: add Kubernetes APT repository
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

  - name: install kubectl
    apt:
      name: kubectl
      state: present
      update_cache: true
      force: yes
   
# - name: Create slave home directory
#   file:
#     path: '{{ slave_linux_home }}'
#     state: directory
#     owner: '{{ slave_linux_jenkins_username }}'
#     group: '{{ slave_linux_user_group }}'
#     mode: 0775
#   become: true

# - name: Install slave jenkins agent
#   jenkins_script:
#     user: '{{ master_username }}'
#     password: '{{ master_password }}'
#     validate_certs: false
#     timeout: 120
#     url: '{{ master_url }}'
#     script: >-
#       {{ lookup('template', 'add_linux_slave.groovy.j2') }}
  # - pip:
  #   name: jenkinsapi

  # - name: Create jenkins node
  #   jenkins_api:
  #     jenkins_url: '{{ jenkins_master_url }}'
  #     command: create_node
  #     args:
  #       '{{ ansible_hostname }}'
  #       #- '{{ jenkins_node_name or ansible_hostname }}'
  #     kwargs:
  #       #numExecutors: '{{ jenkins_node_executors }}'
  #       remoteFS: '{{ jenkins_home }}'
  #       #labels: '{{ jenkins_node_labels }}'
  #       launcher: hudson.plugins.sshslaves.SSHLauncher
  #       launcher_params:
  #         port: "{{ jenkins_node_port }}"
  #         username: '{{ jenkins_username }}'
  #         credentialsId: '{{ jenkins_node_credentials_id }}'
  #         host: '{{ ansible_hostname }}' #'{{ (jenkins_node_host or ansible_eth0.ipv4.address)|trim }}'
  #   #when: not ansible_check_mode
